services:
    Enhavo\Bundle\MediaLibraryBundle\Media\MediaLibraryManager:
        public: true
        arguments:
            - '%enhavo_media_library.content_type%'
            - '@enhavo_media.file.repository'
            - '@enhavo_taxonomy.term.repository'
            - '@translator'

    Enhavo\Bundle\MediaLibraryBundle\EventListener\ContentTypeSubscriber:
        arguments:
            - '@Enhavo\Bundle\MediaLibraryBundle\Media\MediaLibraryManager'
        tags:
            - { name: kernel.event_subscriber }

    Enhavo\Bundle\MediaLibraryBundle\EventListener\FileUploadSubscriber:
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_subscriber }

    Enhavo\Bundle\MediaLibraryBundle\GarbageCollection\Voter\LibraryGarbageCollectionVoter:
        tags:
            - { name: enhavo_media.garbage_collection_voter, priority: 20 }

    Enhavo\Bundle\MediaLibraryBundle\Form\Extension\MediaExtension:
        tags:
            - { name: form.type_extension, extended_type: Enhavo\Bundle\MediaBundle\Form\Type\MediaType }

    Enhavo\Bundle\MediaLibraryBundle\Media\MediaLibraryExtension:
        public: true
        calls:
            - [setContainer, ['@service_container']]
            - [setTemplateResolver, ['@Enhavo\Bundle\AppBundle\Template\TemplateResolverInterface']]
        tags:
            - { name: enhavo.media_extension , alias: media_library }

    Enhavo\Bundle\MediaLibraryBundle\Menu\MediaLibraryRootMenuType:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\MediaLibraryBundle\Menu\MediaLibraryMenu:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\MediaLibraryBundle\Menu\TagMenuType:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\MediaLibraryBundle\Form\Type\FileType:
        arguments:
            - '@Enhavo\Bundle\MediaLibraryBundle\Media\MediaLibraryManager'
            - '@enhavo_media.media.public_url_generator'
            - '%enhavo_media.form%'
        tags:
            - { name: form.type }

    Enhavo\Bundle\MediaLibraryBundle\Filter\MediaLibraryContentTypeFilterType:
        arguments:
            - '@translator'
            - '%enhavo_media_library.content_type%'
        tags:
            - { name: enhavo_resource.filter }

    Enhavo\Bundle\MediaLibraryBundle\Filter\MediaLibraryUnusedFileFilterType:
        tags:
            - { name: enhavo_resource.filter }

    Enhavo\Bundle\MediaLibraryBundle\Action\MediaLibraryUploadActionType:
        tags:
            - { name: enhavo_resource.action }

    Enhavo\Bundle\MediaLibraryBundle\Collection\MediaLibraryCollection:
        arguments:
            - '@Enhavo\Bundle\ResourceBundle\ExpressionLanguage\ResourceExpressionLanguage'
            - '@Enhavo\Bundle\ResourceBundle\Filter\FilterQueryFactory'
            - '@request_stack'
            - '@router'
            - '@Enhavo\Bundle\MediaLibraryBundle\Media\MediaLibraryManager'
            - '@enhavo_media.media.private_url_generator'
        tags:
            - { name: enhavo_resource.collection }


    Enhavo\Bundle\MediaLibraryBundle\Endpoint\MediaLibraryEndpointType:
        arguments:
            - '@router'
            - '@enhavo_media.media.media_manager'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
        tags:
            - { name: enhavo_api.endpoint }
            - { name: container.service_subscriber }

    Enhavo\Bundle\MediaLibraryBundle\Endpoint\MediaLibraryUploadEndpointType:
        arguments:
            - '@enhavo_media.media.media_manager'
            - '@enhavo_media.file.factory'
            - '@validator'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
        tags:
            - { name: enhavo_api.endpoint }
            - { name: container.service_subscriber }
